plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs'
    id 'io.gitlab.arturbosch.detekt'
}

// Read Google News API credentials
def credentialFile = rootProject.file("credentials.properties")
def credentialProperty = new Properties()
credentialProperty.load(new FileInputStream(credentialFile))

android {
    compileSdk compile_sdk

    defaultConfig {
        applicationId "com.example.paulsample"
        minSdk min_sdk
        targetSdk target_sdk
        versionCode version_code
        versionName version_name
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "NEWS_API_KEY", credentialProperty['NEWS_API_KEY'])
        buildConfigField("String", "BASE_URL", credentialProperty['BASE_URL'])
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
        }
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility jvm_version
        targetCompatibility jvm_version
    }
    kotlinOptions {
        jvmTarget = jvm_version
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Dagger, Hilt
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$dagger_hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_hilt_version"

    //Android KTX
    implementation "androidx.core:core-ktx:$androidx_core_ktx"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraint_layout"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx"
    implementation "androidx.legacy:legacy-support-v4:$androidx_legacy_support_v4"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$livedata_ktx"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "com.google.android.material:material:$android_material"
    implementation "androidx.appcompat:appcompat:$androidx_app_compact"
    implementation "androidx.navigation:navigation-fragment-ktx:$androidx_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$androidx_navigation"

    // Room with kotlin extensions, coroutines support and testing helpers
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"

    //Multi dex
    implementation "com.android.support:multidex:$multidex_support"

    //Detekt
    detekt("io.gitlab.arturbosch.detekt:detekt-formatting:$detekt_version")
    detekt("io.gitlab.arturbosch.detekt:detekt-cli:$detekt_version")

    //Testing
    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_espresso_core"
    testImplementation "org.mockito:mockito-core:$mockito_core"
    testImplementation "android.arch.core:core-testing:$android_arch_core_testing"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_core"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_runner"
    androidTestImplementation "androidx.test:core-ktx:$androidx_test_core_ktx"
}
